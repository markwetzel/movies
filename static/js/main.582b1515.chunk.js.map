{"version":3,"sources":["serviceWorker.ts","components/Favorites.tsx","components/Header.tsx","components/StyledMenu.tsx","components/MovieMenu.tsx","util/date.ts","util/string.ts","components/MovieResult.tsx","components/MovieResults.tsx","components/BottomNav.tsx","components/Search.tsx","components/TopNav.tsx","components/WatchLater.tsx","util/axios.ts","components/App.tsx","index.tsx","assets/img/logo.png"],"names":["Boolean","window","location","hostname","match","Favorites","props","$Header","Header","title","alt","height","src","logo","Typography","component","variant","StyledMenu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MovieMenu","React","useState","anchorEl","setAnchorEl","closeMenu","IconButton","aria-controls","aria-haspopup","color","onClick","event","currentTarget","id","keepMounted","open","onClose","MenuItem","onWatchLaterClick","movieResultId","ListItemIcon","fontSize","ListItemText","primary","onFavoriteClick","formatDate","dateInput","value","date","String","length","isStringEmpty","Date","parse","toLocaleDateString","$TableRow","TableRow","MovieResult","url","row","setOpen","tmdbConfig","images","base_url","backdrop_sizes","poster_path","TableCell","aria-label","size","scope","$ResponsiveTableCell","align","vote_average","release_date","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","gutterBottom","Table","TableBody","overview","theme","createMuiTheme","breakpoints","down","MovieResults","movies","movieTable","TableContainer","Paper","TableHead","map","movie","key","$BottomNavigation","BottomNavigation","up","BottomNav","history","useHistory","setValue","onChange","newValue","push","showLabels","BottomNavigationAction","icon","label","$Form","Search","query","setQuery","isQueryEmpty","trim","onSubmit","preventDefault","TextField","autoComplete","fullWidth","name","e","target","type","InputProps","endAdornment","InputAdornment","position","disabled","$Nav","$Ul","$NavLink","NavLink","TopNav","activeClassName","exact","to","WatchLater","console","log","watchLaterIds","find","watchLaterMovies","axios","create","baseURL","method","App","setMovies","watchLater","setWatchLater","setTmdbConfig","$Container","axiosConfig","get","process","then","res","config","data","catch","handleSearchSubmit","a","searchMovies","movieResults","fetchMovie","movieId","results","handleWatchLaterClick","movieResult","concat","palette","main","ThemeProvider","path","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.582b1515.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\n\r\nexport interface FavoritesProps {}\r\n\r\nconst Favorites: React.FC<FavoritesProps> = (props) => {\r\n  return <div>Favorites</div>;\r\n};\r\n\r\nexport default Favorites;\r\n","/* eslint-disable react/jsx-pascal-case */\r\n\r\nimport React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport logo from '../assets/img/logo.png';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nconst $Header = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport interface HeaderProps {\r\n  title: string;\r\n}\r\n\r\nconst Header: React.FunctionComponent<HeaderProps> = (props) => {\r\n  const { title } = props;\r\n\r\n  return (\r\n    <$Header>\r\n      <img alt='Logo' height='100px' src={logo} />\r\n      <Typography component='h1' variant='h2'>\r\n        {title}\r\n      </Typography>\r\n    </$Header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import Menu, { MenuProps } from '@material-ui/core/Menu';\r\n\r\nimport React from 'react';\r\n\r\nconst StyledMenu: React.FC<MenuProps> = (props) => {\r\n  return (\r\n    <Menu\r\n      elevation={0}\r\n      getContentAnchorEl={null}\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'center',\r\n      }}\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default StyledMenu;\r\n","import FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport { IconButton } from '@material-ui/core';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport React from 'react';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\nimport StyledMenu from './StyledMenu';\r\n\r\nexport interface MovieMenuProps {\r\n  movieResultId: number;\r\n  onWatchLaterClick(movieResultId: number): void;\r\n  onFavoriteClick(movieResultId: number): void;\r\n}\r\n\r\nconst MovieMenu: React.FC<MovieMenuProps> = (props) => {\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const closeMenu = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const addToWatchLater = () => {\r\n    props.onWatchLaterClick(props.movieResultId);\r\n  };\r\n\r\n  const addToFavorites = () => {\r\n    props.onFavoriteClick(props.movieResultId);\r\n  };\r\n\r\n  const handleWatchLaterClick = () => {\r\n    addToWatchLater();\r\n    closeMenu();\r\n  };\r\n\r\n  const handleFavoriteClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    addToFavorites();\r\n    closeMenu();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        aria-controls='customized-menu'\r\n        aria-haspopup='true'\r\n        color='primary'\r\n        onClick={handleClick}\r\n      >\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <StyledMenu\r\n        id='customized-menu'\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={closeMenu}\r\n      >\r\n        <MenuItem onClick={handleWatchLaterClick}>\r\n          <ListItemIcon>\r\n            <ScheduleIcon fontSize='small' />\r\n          </ListItemIcon>\r\n          <ListItemText primary='Save to Watch Later' />\r\n        </MenuItem>\r\n        <MenuItem onClick={handleFavoriteClick}>\r\n          <ListItemIcon>\r\n            <FavoriteIcon fontSize='small' />\r\n          </ListItemIcon>\r\n          <ListItemText primary='Add to Favorites' />\r\n        </MenuItem>\r\n      </StyledMenu>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieMenu;\r\n","import { isString, isStringEmpty } from './string';\r\n\r\nexport const parseDate = (date: string): Date => new Date(Date.parse(date));\r\n\r\nexport const formatDate = (dateInput: string | Date): string | undefined => {\r\n  let parsedDate: Date;\r\n\r\n  if (!isString(dateInput) || isStringEmpty(dateInput as string)) return;\r\n\r\n  parsedDate = parseDate(dateInput as string);\r\n  return parsedDate.toLocaleDateString();\r\n};\r\n","export const isString = (value: any): boolean =>\r\n  typeof value === 'string' || value instanceof String;\r\n\r\nexport const isStringEmpty = (value: string): boolean =>\r\n  !value || value.length === 0;\r\n","/* eslint-disable react/jsx-pascal-case */\r\n\r\nimport * as React from 'react';\r\n\r\nimport {\r\n  Box,\r\n  Collapse,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n} from '@material-ui/core';\r\n\r\nimport { $ResponsiveTableCell } from './MovieResults';\r\nimport Config from '../types/Config';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport MR from '../types/MovieResult';\r\nimport MovieMenu from './MovieMenu';\r\nimport { formatDate } from '../util/date';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nconst $TableRow = styled(TableRow)`\r\n  vertical-align: top !important;\r\n`;\r\n\r\nexport interface MovieResultProps {\r\n  row: MR;\r\n  tmdbConfig?: Config;\r\n  onWatchLaterClick?(movieResultId: number): void;\r\n  onFavoriteClick?(movieResultId: number): void;\r\n}\r\n\r\nconst MovieResult: React.FunctionComponent<MovieResultProps> = (props) => {\r\n  const { row } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n  let url;\r\n\r\n  if (props.tmdbConfig) {\r\n    const { images } = props.tmdbConfig;\r\n\r\n    const { base_url, backdrop_sizes } = images;\r\n    const { poster_path } = row;\r\n\r\n    url = `${base_url}${backdrop_sizes[0]}${poster_path}`;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow>\r\n        <TableCell>\r\n          <IconButton\r\n            aria-label='expand row'\r\n            size='small'\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component='th' scope='row'>\r\n          {row.title}\r\n        </TableCell>\r\n        <$ResponsiveTableCell align='right'>\r\n          {row.vote_average}\r\n        </$ResponsiveTableCell>\r\n        <TableCell align='right'>{formatDate(row.release_date)}</TableCell>\r\n        <TableCell align='right'>\r\n          {props.onFavoriteClick && props.onWatchLaterClick && (\r\n            <MovieMenu\r\n              movieResultId={row.id}\r\n              onFavoriteClick={props.onFavoriteClick}\r\n              onWatchLaterClick={props.onWatchLaterClick}\r\n            />\r\n          )}\r\n        </TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout='auto' unmountOnExit>\r\n            <Box margin={1}>\r\n              <Typography variant='h6' gutterBottom component='div'>\r\n                Overview\r\n              </Typography>\r\n              <Table size='small' aria-label='purchases'>\r\n                <TableBody>\r\n                  <$TableRow>\r\n                    <TableCell colSpan={4}>\r\n                      <img src={url} alt={row.title} height={400} />\r\n                    </TableCell>\r\n                    <TableCell colSpan={4}>\r\n                      <Typography>{row.overview}</Typography>\r\n                    </TableCell>\r\n                  </$TableRow>\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MovieResult;\r\n","/* eslint-disable react/jsx-pascal-case */\r\n\r\nimport Config from '../types/Config';\r\nimport MovieResult from '../types/MovieResult';\r\nimport MovieResultJsx from './MovieResult';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { createMuiTheme } from '@material-ui/core';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nconst theme = createMuiTheme();\r\n\r\nexport const $ResponsiveTableCell = styled(TableCell)`\r\n  ${theme.breakpoints.down('xs')} {\r\n    display: none !important;\r\n  }\r\n`;\r\n\r\nexport interface MovieResultsProps {\r\n  movies: MovieResult[];\r\n  tmdbConfig?: Config;\r\n  onWatchLaterClick?(movieResultId: number): void;\r\n  onFavoriteClick?(movieResultId: number): void;\r\n}\r\n\r\nconst MovieResults: React.FunctionComponent<MovieResultsProps> = (props) => {\r\n  const { movies, tmdbConfig } = props;\r\n  const movieTable = (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label='collapsible table'>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell />\r\n            <TableCell>Title</TableCell>\r\n            <$ResponsiveTableCell align='right'>Rating</$ResponsiveTableCell>\r\n            <TableCell align='right'>Release Date</TableCell>\r\n            <TableCell align='right'>Actions</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {movies.map((movie) => (\r\n            <MovieResultJsx\r\n              key={movie.id}\r\n              onFavoriteClick={props.onFavoriteClick}\r\n              onWatchLaterClick={props.onWatchLaterClick}\r\n              row={movie}\r\n              tmdbConfig={tmdbConfig}\r\n            />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n\r\n  return movies.length > 0 ? movieTable : null;\r\n};\r\n\r\nexport default MovieResults;\r\n","/* eslint-disable react/jsx-pascal-case */\r\n\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport React from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport WatchLaterIcon from '@material-ui/icons/WatchLater';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport styled from '@emotion/styled/macro';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst theme = createMuiTheme();\r\n\r\nconst $BottomNavigation = styled(BottomNavigation)`\r\n  bottom: 0;\r\n  position: fixed;\r\n  width: 100%;\r\n\r\n  ${theme.breakpoints.up('sm')} {\r\n    display: none !important;\r\n  }\r\n`;\r\n\r\nexport interface BottomNavProps {}\r\n\r\nconst BottomNav: React.FC<BottomNavProps> = (props) => {\r\n  const history = useHistory();\r\n\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    switch (newValue) {\r\n      case 0:\r\n        history.push('/');\r\n        break;\r\n      case 1:\r\n        history.push('/later');\r\n        break;\r\n      case 2:\r\n        history.push('/favorites');\r\n        break;\r\n      default:\r\n        history.push('/');\r\n        break;\r\n    }\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <$BottomNavigation onChange={handleChange} showLabels value={value}>\r\n      <BottomNavigationAction icon={<SearchIcon />} label='Search' />\r\n      <BottomNavigationAction icon={<WatchLaterIcon />} label='Watch Later' />\r\n      <BottomNavigationAction icon={<FavoriteIcon />} label='Favorites' />\r\n    </$BottomNavigation>\r\n  );\r\n};\r\n\r\nexport default BottomNav;\r\n","/* eslint-disable react/jsx-pascal-case */\r\n\r\nimport { IconButton, InputAdornment, TextField } from '@material-ui/core';\r\n\r\nimport React from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nconst $Form = styled.form`\r\n  margin: 1em 0;\r\n`;\r\n\r\nexport interface SearchProps {\r\n  onSubmit(event: React.FormEvent<HTMLFormElement>, query: string): void;\r\n}\r\n\r\nconst Search: React.FunctionComponent<SearchProps> = (props) => {\r\n  const [query, setQuery] = React.useState('');\r\n\r\n  const isQueryEmpty = () => query.trim().length === 0;\r\n\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    if (isQueryEmpty()) {\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n\r\n    props.onSubmit(event, query);\r\n    setQuery('');\r\n  };\r\n\r\n  return (\r\n    <$Form onSubmit={handleSubmit}>\r\n      <TextField\r\n        autoComplete='off'\r\n        fullWidth={true}\r\n        id='movie-name'\r\n        label='Search movies...'\r\n        name='movie-name'\r\n        onChange={(e) => setQuery(e.target.value)}\r\n        type='search'\r\n        value={query}\r\n        variant='outlined'\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position='end'>\r\n              <IconButton\r\n                aria-label='search'\r\n                disabled={isQueryEmpty()}\r\n                type='submit'\r\n              >\r\n                <SearchIcon />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n    </$Form>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","/* eslint-disable react/jsx-pascal-case */\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport React from 'react';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nconst theme = createMuiTheme();\r\n\r\nconst $Nav = styled.nav`\r\n  ${theme.breakpoints.down('xs')} {\r\n    display: none !important;\r\n  }\r\n`;\r\n\r\nconst $Ul = styled.ul`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  list-style-type: none;\r\n`;\r\n\r\nconst $NavLink = styled(NavLink)`\r\n  color: #000;\r\n  font-size: 1.3em;\r\n  font-weight: 400;\r\n  text-decoration: none;\r\n  &.active {\r\n    color: #f9bc50;\r\n    font-weight: 500;\r\n  }\r\n`;\r\n\r\nexport interface TopNavProps {}\r\n\r\nconst TopNav: React.FC<TopNavProps> = (props) => {\r\n  return (\r\n    <$Nav>\r\n      <$Ul>\r\n        <li>\r\n          <$NavLink activeClassName='active' exact to='/'>\r\n            Search\r\n          </$NavLink>\r\n        </li>\r\n        <li>\r\n          <$NavLink activeClassName='active' to='/later'>\r\n            Watch Later\r\n          </$NavLink>\r\n        </li>\r\n        <li>\r\n          <$NavLink activeClassName='active' to='/favorites'>\r\n            Favorites\r\n          </$NavLink>\r\n        </li>\r\n      </$Ul>\r\n    </$Nav>\r\n  );\r\n};\r\n\r\nexport default TopNav;\r\n","import MovieResult from '../types/MovieResult';\r\nimport MovieResults from './MovieResults';\r\nimport React from 'react';\r\nimport axiosConfig from '../util/axios';\r\n\r\nexport interface WatchLaterProps {\r\n  watchLaterIds: number[];\r\n  watchLaterMovies: MovieResult[];\r\n}\r\n\r\nconst WatchLater: React.FC<WatchLaterProps> = (props) => {\r\n  const [movies, setMovies] = React.useState<MovieResult[]>([]);\r\n\r\n  console.log(props.watchLaterIds);\r\n\r\n  const id = props.watchLaterIds.length > 0 ? props.watchLaterIds[0] : 11;\r\n\r\n  console.log(id);\r\n\r\n  if (movies.find((movie) => movie.id === id)) {\r\n    console.log('Got it');\r\n  } else {\r\n    console.log('dont got it');\r\n  }\r\n\r\n  // axiosConfig\r\n  //   .get(\r\n  //     `movie/${id}?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US`\r\n  //   )\r\n  //   .then((res) => {\r\n  //     const { data: movieResult } = res;\r\n\r\n  //     console.log(movieResult);\r\n\r\n  //     setMovies(movieResult);\r\n  //   })\r\n  //   .catch((err) => {\r\n  //     console.log('Something went wrong!', err);\r\n  //   });\r\n\r\n  return (\r\n    <div>\r\n      Watch Later\r\n      <MovieResults movies={props.watchLaterMovies} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WatchLater;\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: `https://api.themoviedb.org/3/`,\r\n  timeout: 1000,\r\n  method: 'GET',\r\n});\r\n","/* eslint-disable react/jsx-pascal-case */\r\n\r\nimport * as React from 'react';\r\n\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\nimport Config from '../types/Config';\r\nimport Favorites from './Favorites';\r\nimport Header from './Header';\r\nimport MovieResult from '../types/MovieResult';\r\nimport MovieResults from './MovieResults';\r\nimport NavBar from './BottomNav';\r\nimport Search from './Search';\r\nimport TopNav from './TopNav';\r\nimport WatchLater from './WatchLater';\r\nimport axiosConfig from '../util/axios';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nexport interface AppProps {}\r\n\r\nconst App: React.FunctionComponent<AppProps> = () => {\r\n  const [movies, setMovies] = React.useState<MovieResult[]>([]);\r\n  const [watchLaterIds, setWatchLaterIds] = React.useState<number[]>([]);\r\n  const [watchLater, setWatchLater] = React.useState<MovieResult[]>([]);\r\n\r\n  const [tmdbConfig, setTmdbConfig] = React.useState<Config>();\r\n\r\n  const $Container = styled.div`\r\n    padding: 1em;\r\n  `;\r\n\r\n  // Get the TMDB configuration\r\n  React.useEffect(() => {\r\n    axiosConfig\r\n      .get(`configuration?api_key=${process.env.REACT_APP_TMDB_API_KEY}`)\r\n      .then((res) => {\r\n        const config = res.data as Config;\r\n        setTmdbConfig(config);\r\n      })\r\n      .catch(() => {\r\n        console.log('Error retrieving config');\r\n      });\r\n  }, []);\r\n\r\n  const handleSearchSubmit = async (\r\n    event: React.FormEvent<HTMLFormElement>,\r\n    query: string\r\n  ) => {\r\n    event.preventDefault();\r\n\r\n    const movieResults = await searchMovies(query);\r\n    console.log(movieResults);\r\n\r\n    if (movieResults) {\r\n      setMovies(movieResults);\r\n    }\r\n  };\r\n\r\n  const handleFavoriteClick = (movieResultId: number) => {\r\n    console.log('Favorite click', movieResultId);\r\n  };\r\n\r\n  const fetchMovie = async (\r\n    movieId: number\r\n  ): Promise<MovieResult | undefined> => {\r\n    try {\r\n      const res = await axiosConfig.get(\r\n        `movie/${movieId}?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US`\r\n      );\r\n\r\n      return res.data as MovieResult;\r\n    } catch (error) {\r\n      console.log('Something went wrong!', error);\r\n    }\r\n  };\r\n\r\n  const searchMovies = async (\r\n    query: string\r\n  ): Promise<MovieResult[] | undefined> => {\r\n    try {\r\n      const res = await axiosConfig.get(\r\n        `search/movie?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\r\n      );\r\n\r\n      return res.data.results as MovieResult[];\r\n    } catch (error) {\r\n      console.log('Something went wrong!', error);\r\n    }\r\n  };\r\n\r\n  const handleWatchLaterClick = async (movieResultId: number) => {\r\n    if (!watchLater.find((movie: MovieResult) => movie.id === movieResultId)) {\r\n      const movieResult = await fetchMovie(movieResultId);\r\n      if (movieResult) {\r\n        setWatchLater(watchLater.concat(movieResult));\r\n      }\r\n    }\r\n  };\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#f9bc50',\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <BrowserRouter>\r\n        <TopNav />\r\n        <$Container>\r\n          <Header title='Cinemate' />\r\n          <Switch>\r\n            <Route path='/favorites'>\r\n              <Favorites />\r\n            </Route>\r\n            <Route path='/later'>\r\n              <WatchLater\r\n                watchLaterIds={watchLaterIds}\r\n                watchLaterMovies={watchLater}\r\n              />\r\n            </Route>\r\n            <Route path='/'>\r\n              <Search onSubmit={handleSearchSubmit} />\r\n              <MovieResults\r\n                movies={movies}\r\n                onFavoriteClick={handleFavoriteClick}\r\n                onWatchLaterClick={handleWatchLaterClick}\r\n                tmdbConfig={tmdbConfig}\r\n              />\r\n            </Route>\r\n          </Switch>\r\n        </$Container>\r\n        <NavBar />\r\n      </BrowserRouter>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import './index.css';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport App from './components/App';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.a6922b8d.png\";"],"sourceRoot":""}